@using BalzorAppVlan.Datas

@using Microsoft.AspNetCore.Identity
@implements IDisposable
@inject NavigationManager NavigationManager

<div class="sidebar bg-light d-flex flex-column shadow-sm"
     style="width: 320px; direction: rtl;">

    <div class="sidebar-header px-3 py-3 border-bottom" style="direction: ltr;">
        <a href="/" class="text-decoration-none text-dark fw-semibold fs-5">Switches Management</a>
    </div>

    <div class="sidebar-body flex-grow overflow-auto" style="direction: ltr;">
        <ul class="nav flex-column small">
            <!-- COMMON -->
            <li class="nav-item px-3 pt-3 text-muted text-uppercase small">Common</li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/">
                    <i class="bi bi-speedometer2 me-2"></i> Dashboard
                </NavLink>
            </li>

            <!-- ADMIN -->
            <li class="nav-item px-3 pt-4 text-muted text-uppercase small">Admin</li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/admin/companies">
                    <i class="bi bi-buildings me-2"></i> Location Management
                </NavLink>
            </li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/admin/switches">
                    <i class="bi bi-hdd-network me-2"></i> Switch Management
                </NavLink>
            </li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/admin/system-settings">
                    <i class="bi bi-gear me-2"></i> System Settings
                </NavLink>
            </li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/admin/audit-logs">
                    <i class="bi bi-graph-up-arrow me-2"></i> Reports & Audit
                </NavLink>
            </li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/admin/users/adminusers">
                    <i class="bi bi-people-fill me-2"></i> Manage Users
                </NavLink>
            </li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/admin/users/roles">
                    <i class="bi bi-shield-lock-fill me-2"></i> Manage Roles
                </NavLink>
            </li>

            <!-- USER -->
            <li class="nav-item px-3 pt-4 text-muted text-uppercase small">User</li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/profile">
                    <i class="bi bi-person-circle me-2"></i> Profile
                </NavLink>
            </li>
            <li class="nav-item px-3 ">
                <NavLink class="nav-link text-dark" href="/support">
                    <i class="bi bi-chat-dots me-2"></i> Support
                </NavLink>
            </li>
        </ul>


    </div>

    <AuthorizeView>
        <Authorized>
            <div class="sidebar-footer border-top p-3 small" style="direction: ltr;">
                <div class="text-muted">Signed in as</div>
                <div class="fw-normal">@context.User.Identity?.Name</div>
                <form method="post" action="/Account/Logout">
                    <input name="__RequestVerificationToken" type="hidden" value="@antiforgeryToken" />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button class="btn btn-sm btn-outline-secondary w-100 mt-2">Logout</button>
                </form>
            </div>
        </Authorized>
    </AuthorizeView>
</div>
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject IHttpContextAccessor HttpContextAccessor

@code {
    private string? antiforgeryToken;
    private string? currentUrl;
    
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        var tokens = Antiforgery.GetAndStoreTokens(HttpContextAccessor.HttpContext);
        antiforgeryToken = tokens.RequestToken;

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }
 
    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
